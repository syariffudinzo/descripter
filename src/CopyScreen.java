
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Syariffudin <syariffudinsapri@gmail.com>
 */
public class CopyScreen extends javax.swing.JPanel {

    String message;
    boolean copied=false;
    Color tempColor;
    
    /**
     * Creates new form CopyScreen
     * @param message
     */
    public CopyScreen(String message) {
        initComponents();
        this.message=message;
        //CopyIndicator.setVisible(false);
        resultsTextBox.setText(message);
        tempColor = resultsTextBox.getBackground();
        
    }
    
    /**
     * copy text from result textbox into windows clipboard
     */
    public void copyAndPaste(){
        StringSelection ss = new StringSelection(resultsTextBox.getText());
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(ss, null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        resultsTextBox = new javax.swing.JTextArea();
        copyButton = new javax.swing.JButton();
        clearEditedButton = new javax.swing.JButton();

        resultsTextBox.setColumns(20);
        resultsTextBox.setRows(5);
        jScrollPane1.setViewportView(resultsTextBox);
        resultsTextBox.addFocusListener(new FocusListener() {
            public void focusGained(FocusEvent e) {
                copyButton.setText("Copy All Text To Clipboard");
                copyButton.setBackground(tempColor);
            }

            public void focusLost(FocusEvent e) {

            }

        });

        copyButton.setText("Copy All Text To Clipboard");
        copyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyButtonActionPerformed(evt);
            }
        });

        clearEditedButton.setText("Clear Edited");
        clearEditedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearEditedButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(copyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clearEditedButton)
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearEditedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void copyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyButtonActionPerformed
        // TODO add your handling code here:
        if(!copied){
            copyButton.setText("Copied To Clipboard");
            copyButton.setBackground(Color.GREEN);
            copyAndPaste();
            copied=false;
        }
    }//GEN-LAST:event_copyButtonActionPerformed

    private void clearEditedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearEditedButtonActionPerformed
        // TODO add your handling code here:
        resultsTextBox.setText(message);
        copyButton.setText("Copy All Text To Clipboard");
        copyButton.setBackground(tempColor);
    }//GEN-LAST:event_clearEditedButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearEditedButton;
    private javax.swing.JButton copyButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea resultsTextBox;
    // End of variables declaration//GEN-END:variables
}
